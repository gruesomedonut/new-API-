import React from 'react';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import HomePage from './pages/HomePage';
import CreatePromptPage from './pages/CreatePromptPage';
import PromptDetailPage from './pages/PromptDetailPage';
import PromptListPage from './pages/PromptListPage';
import './App.css';

function App() {
  return (
    <Router>
      <div className="App">
        <Switch>
          <Route exact path="/" component={HomePage} />
          <Route path="/create" component={CreatePromptPage} />
          <Route path="/prompts/:id" component={PromptDetailPage} />
          <Route path="/prompts" component={PromptListPage} />
        </Switch>
      </div>
    </Router>
  );
}

export default App;


import React from 'react';
import { Link } from 'react-router-dom';

function HomePage() {
  return (
    <div>
      <h1>Welcome to the Prompt Library</h1>
      <nav>
        <ul>
          <li><Link to="/create">Create a Prompt</Link></li>
          <li><Link to="/prompts">View All Prompts</Link></li>
        </ul>
      </nav>
    </div>
  );
}

export default HomePage;

import React, { useState } from 'react';
import axios from 'axios';

function CreatePromptPage() {
  const [promptData, setPromptData] = useState({
    name: '',
    system_prompt: '',
    prompt: '',
    metadata_info: '',
    tags: '',
    creator_tenant_id: '',
    created_by: '',
    modified_by: ''
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setPromptData({ ...promptData, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await axios.post('/api/prompt', {
        ...promptData,
        metadata_info: JSON.parse(promptData.metadata_info),
        tags: promptData.tags.split(',').map(tag => tag.trim())
      });
      alert('Prompt created successfully!');
    } catch (error) {
      console.error('There was an error creating the prompt!', error);
    }
  };

  return (
    <div className="App-header">
      <h1>Create a New Prompt</h1>
      <form onSubmit={handleSubmit}>
        <label>
          Name:
          <input type="text" name="name" value={promptData.name} onChange={handleChange} required />
        </label>
        <label>
          System Prompt:
          <input type="text" name="system_prompt" value={promptData.system_prompt} onChange={handleChange} required />
        </label>
        <label>
          Prompt:
          <input type="text" name="prompt" value={promptData.prompt} onChange={handleChange} required />
        </label>
        <label>
          Metadata Info (JSON):
          <input type="text" name="metadata_info" value={promptData.metadata_info} onChange={handleChange} required />
        </label>
        <label>
          Tags (comma separated):
          <input type="text" name="tags" value={promptData.tags} onChange={handleChange} required />
        </label>
        <label>
          Creator Tenant ID:
          <input type="text" name="creator_tenant_id" value={promptData.creator_tenant_id} onChange={handleChange} required />
        </label>
        <label>
          Created By:
          <input type="text" name="created_by" value={promptData.created_by} onChange={handleChange} required />
        </label>
        <label>
          Modified By:
          <input type="text" name="modified_by" value={promptData.modified_by} onChange={handleChange} required />
        </label>
        <button type="submit">Create Prompt</button>
      </form>
    </div>
  );
}

export default CreatePromptPage;


import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import axios from 'axios';

function PromptDetailPage() {
  const { id } = useParams();
  const [prompt, setPrompt] = useState(null);

  useEffect(() => {
    const fetchPrompt = async () => {
      try {
        const response = await axios.get(`/api/prompt/${id}`);
        setPrompt(response.data);
      } catch (error) {
        console.error('Error fetching the prompt:', error);
      }
    };

    fetchPrompt();
  }, [id]);

  if (!prompt) return <div className="App-header">Loading...</div>;

  return (
    <div className="prompt-details">
      <h1>Prompt Details</h1>
      <p><strong>Name:</strong> {prompt.name}</p>
      <p><strong>System Prompt:</strong> {prompt.system_prompt}</p>
      <p><strong>Prompt:</strong> {prompt.prompt}</p>
      <p><strong>Metadata Info:</strong> {JSON.stringify(prompt.metadata_info)}</p>
      <p><strong>Tags:</strong> {prompt.tags.join(', ')}</p>
      <p><strong>Creator Tenant ID:</strong> {prompt.creator_tenant_id}</p>
      <p><strong>Created By:</strong> {prompt.created_by}</p>
      <p><strong>Modified By:</strong> {prompt.modified_by}</p>
      <p><strong>Created At:</strong> {prompt.created_at}</p>
      <p><strong>Modified At:</strong> {prompt.modified_at}</p>
    </div>
  );
}

export default PromptDetailPage;



import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';

function PromptListPage() {
  const [prompts, setPrompts] = useState([]);

  useEffect(() => {
    const fetchPrompts = async () => {
      try {
        const response = await axios.get('/api/prompt');
        setPrompts(response.data);
      } catch (error) {
        console.error('Error fetching the prompts:', error);
      }
    };

    fetchPrompts();
  }, []);

  return (
    <div className="App-header">
      <h1>All Prompts</h1>
      <ul>
        {prompts.map((prompt) => (
          <li key={prompt.id}>
            <Link to={`/prompts/${prompt.id}`}>{prompt.name}</Link>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default PromptListPage;



@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

body {
  margin: 0;
  font-family: 'Roboto', sans-serif;
  background-color: #f0f2f5;
  color: #333;
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

h1 {
  font-size: 2.5rem;
  margin-bottom: 20px;
}

nav ul {
  display: flex;
  gap: 20px;
}

nav a {
  color: #61dafb;
  text-decoration: none;
  font-size: 1.2rem;
}

nav a:hover {
  color: #21a1f1;
}

form {
  background: white;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  max-width: 400px;
  margin: 20px auto;
}

form label {
  display: block;
  margin-bottom: 10px;
  font-weight: bold;
}

form input,
form select,
form textarea {
  width: 100%;
  padding: 10px;
  margin-bottom: 20px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

form button {
  width: 100%;
  padding: 10px;
  background-color: #61dafb;
  border: none;
  border-radius: 4px;
  color: white;
  font-size: 1.2rem;
  cursor: pointer;
}

form button:hover {
  background-color: #21a1f1;
}

ul {
  list-style: none;
  padding: 0;
}

li {
  background: white;
  margin-bottom: 10px;
  padding: 15px;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

a {
  color: #61dafb;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

.prompt-details {
  background: white;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  max-width: 600px;
  margin: 20px auto;
}

.prompt-details p {
  margin: 10px 0;
  line-height: 1.6;
}

